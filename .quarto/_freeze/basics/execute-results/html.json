{
  "hash": "9ae8526df321e04491d2f246354c3e09",
  "result": {
    "engine": "jupyter",
    "markdown": "# Basics\n\n## Finding triangles\n\n::: {#e15bf7ac .cell execution_count=1}\n``` {.python .cell-code}\nimport math\ndef find_xyz(n = 40):\n    m = math.ceil(n / 3)\n    c = 0\n    re = list()\n    for x in range(1, m + 1):\n        for y in range(x, n + 1):\n            z = n - (x + y)\n            if z >= y and x + y > z:\n                c += 1\n                re.append((x, y, z))\n    return [c, re]\n\ncount, results = find_xyz(40)\n\nprint(f\"Number of solutions: {count}\")\nprint(\"Solutions:\")\nfor triple in results:\n    print(triple)\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumber of solutions: 33\nSolutions:\n(2, 19, 19)\n(3, 18, 19)\n(4, 17, 19)\n(4, 18, 18)\n(5, 16, 19)\n(5, 17, 18)\n(6, 15, 19)\n(6, 16, 18)\n(6, 17, 17)\n(7, 14, 19)\n(7, 15, 18)\n(7, 16, 17)\n(8, 13, 19)\n(8, 14, 18)\n(8, 15, 17)\n(8, 16, 16)\n(9, 12, 19)\n(9, 13, 18)\n(9, 14, 17)\n(9, 15, 16)\n(10, 11, 19)\n(10, 12, 18)\n(10, 13, 17)\n(10, 14, 16)\n(10, 15, 15)\n(11, 11, 18)\n(11, 12, 17)\n(11, 13, 16)\n(11, 14, 15)\n(12, 12, 16)\n(12, 13, 15)\n(12, 14, 14)\n(13, 13, 14)\n```\n:::\n:::\n\n\n## Finding probability\n\n::: {#6a815731 .cell execution_count=2}\n``` {.python .cell-code}\nfrom itertools import combinations\nfrom math import prod\n\n# Combinations from a list of numbers\ndata = range(1, 10)\n# Get all combinations of length 5\ncombs_length_5 = combinations(data, 5)\nn = 0\nt = 0\nfor c in combs_length_5:\n    t +=  1\n    if prod(c) % 8 == 0 :\n        n += 1\nprob = n / t\nprint(f\"The probability = {prob}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe probability = 0.7936507936507936\n```\n:::\n:::\n\n\n",
    "supporting": [
      "basics_files"
    ],
    "filters": [],
    "includes": {}
  }
}